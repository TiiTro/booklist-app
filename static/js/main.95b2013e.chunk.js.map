{"version":3,"sources":["snippets/Input.jsx","snippets/Button.jsx","blocks/AddNewBookForm.jsx","snippets/Book.jsx","blocks/EditBookForm.jsx","blocks/BookList.jsx","App.js","index.js"],"names":["Input","label","value","onChange","Button","type","buttonText","onClick","AddNewBookForm","props","bookTitle","bookAuthor","bookComments","handlebookTitle","handlebookAuthor","handlebookComments","submit","onSubmit","Book","title","author","comments","handleDelete","openEdit","style","display","flexDirection","EditBookForm","modalIsOpen","closeModal","isOpen","BookList","books","handleEdit","listStyleType","map","book","id","App","useState","setBooks","setbookTitle","setbookAuthor","setbookComments","bookId","setBookId","setModalIsOpen","useEffect","console","log","axios","get","then","res","data","event","target","preventDefault","idToUpdate","bookObject","post","window","alert","concat","confirm","delete","updatedBookList","filter","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95b2013e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = ({ label, value, onChange }) => {\n  return(\n    <div>\n      <label>\n        {label}\n        <input\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  )\n}\n\nexport default Input;\n","import React from 'react';\n\nconst Button = ({ value, type, buttonText, onClick }) => {\n  return(\n    <div>\n      <button value={value} type={type} onClick={onClick}>{buttonText}</button>\n    </div>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Input from '../snippets/Input';\nimport Button from '../snippets/Button';\n\nconst AddNewBookForm = (props) => {\n  const {\n    bookTitle,\n    bookAuthor,\n    bookComments,\n\t  handlebookTitle,\n\t  handlebookAuthor,\n    handlebookComments,\n    submit,\n    onSubmit\n  } = props;\n\n  return (\n    <div>\n      <h3>Lisää kirja</h3>\n      <form onSubmit={onSubmit}>\n\t\t    <Input \n\t\t    \tlabel={\"Kirjan nimi\"}\n\t\t\t    value={bookTitle}\n          onChange={handlebookTitle}\n\t\t\t    />\n\t\t    <br></br>\n\t\t\t  <Input \n\t\t    \tlabel={\"Kirjoittaja\"}\n\t\t\t    value={bookAuthor}\n          onChange={handlebookAuthor}\n\t\t\t  />\n          <br></br>\n          <Input \n\t\t    \tlabel={\"Kommentit\"}\n\t\t\t    value={bookComments}\n          onChange={handlebookComments}\n\t\t\t  />\n          <Button \n            type={submit}\n            buttonText={\"Tallenna\"}/>\n\t    </form>\n    </div>\n)}\n\nexport default AddNewBookForm;","import React from 'react';\nimport Button from './Button.jsx';\n\nconst Book = ({ title, author, comments, handleDelete, openEdit }) => {\n  // console.log({id})\n  // console.log({title})\n  // console.log({comments})\n  // console.log(title, index);\n  return (\n    <div>\n      <li>\n        <h3>{title}</h3>\n        <p>{author}</p>\n        <p>{comments}</p>\n      </li>\n      <div style={{ display: \"flex\", flexDirection: \"row\"}}>\n        <Button\n          value={\"Muokkaa\"}\n          buttonText={\"Muokkaa\"}\n          onClick={openEdit}\n        />\n        <Button\n          value={\"Poista\"}\n          buttonText={\"Poista\"}\n          onClick={handleDelete}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Book;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport Input from '../snippets/Input';\nimport Button from '../snippets/Button';\n\nconst EditBookForm = (props) => {\n  const {\n    bookTitle,\n    bookAuthor,\n    bookComments,\n\t  handlebookTitle,\n\t  handlebookAuthor,\n    handlebookComments,\n    submit,\n    onSubmit,\n    modalIsOpen,\n    closeModal\n  } = props;\n\n  \n\n  return (\n    <div>\n      <Modal isOpen={modalIsOpen}>\n        <h3>Muokkaa kirjaa</h3>\n        <form onSubmit={onSubmit}>\n\t\t      <Input\n\t\t      \tlabel={\"Kirjan nimi\"}\n\t\t\t      value={bookTitle}\n            onChange={handlebookTitle}\n\t\t\t      />\n\t\t      <br></br>\n\t\t\t    <Input \n\t\t      \tlabel={\"Kirjoittaja\"}\n\t\t\t      value={bookAuthor}\n            onChange={handlebookAuthor}\n\t\t\t    />\n            <br></br>\n            <Input \n\t\t      \tlabel={\"Kommentit\"}\n\t\t\t      value={bookComments}\n            onChange={handlebookComments}\n\t\t\t    />\n          <div style={{ display: \"flex\", flexDirection: \"row\"}}>\n            <Button\n              type={submit}\n              value={\"Tallenna\"}\n              buttonText={\"Tallenna\"}\n              // onClick={handleSave}\n            />\n            <Button\n              value={\"Peruuta\"}\n              buttonText={\"Peruuta\"}\n              onClick={closeModal}\n            />\n          </div>\n\t      </form>\n      </Modal>\n      \n    </div>\n)}\n\nexport default EditBookForm;","import React from 'react';\nimport Book from '../snippets/Book.jsx';\nimport EditBookForm from '../blocks/EditBookForm.jsx';\n\nconst BookList = ({ books, handleDelete, handleEdit, openEdit, modalIsOpen }) => {\n  // console.log(\"kirjalista-komponentti\", books);\n\n  return (\n    <div>\n      <h1>Luetut kirjat</h1>\n        <ul style={{listStyleType: \"none\"}}>\n          {books.map((book) =>\n            <Book\n              key={book.id}\n              handleDelete={() => handleDelete(book)}\n              handleEdit={handleEdit}\n              openEdit={() => openEdit(book)}\n              title={book.title}\n              author={book.author}\n              comments={book.comments}\n              id={book.id}\n              modalIsOpen = {modalIsOpen}\n            />\n          )}\n        </ul>\n    </div>\n  )}\n\n  export default BookList;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport AddNewBookForm from './blocks/AddNewBookForm.jsx';\nimport BookList from './blocks/BookList.jsx';\nimport EditBookForm from './blocks/EditBookForm';\n\nconst App = () => {\n  const [books, setBooks] = useState([])\n  const [bookTitle, setbookTitle] = useState('')\n  const [bookAuthor, setbookAuthor] = useState('')\n  const [bookComments, setbookComments] = useState('')\n  const [bookId, setBookId] = useState('')\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  // fetching all books\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('http://localhost:4000/books')\n      .then(res => {\n        console.log('promise fulfilled')\n        setBooks(res.data)\n    })\n  }, []) // empty array means only running useEffect after first render\n  // console.log('render', books.length, 'books')\n  // console.log('Here are your books: ', books)\n\n    // Adding a book\n  const addBook = (event) => {\n    event.preventDefault()\n    const bookObject = {\n      title: bookTitle,\n      author: bookAuthor,\n      comments: bookComments\n    }\n\n    console.log(\"Kirja lisätään\", bookObject)\n    // console.log(books)\n\n    axios.post('http://localhost:4000/books/add', bookObject)\n      .then(res => {\n        // use concat to add new object without modifying state directly!\n        setBooks(books.concat(bookObject))\n        console.log(\"axios\", res.data)\n      });\n\n    setbookTitle('')\n    setbookAuthor('')\n    setbookComments('')\n  }\n\n  //event handler sets the state for new book to be the value of input\n  const handlebookTitle = (event) => {\n    console.log(event.target.value)\n    setbookTitle(event.target.value)\n  }\n\n  const handlebookAuthor = (event) => {\n    console.log(event.target.value)\n    setbookAuthor(event.target.value)\n  }\n\n  const handlebookComments = (event) => {\n    console.log(event.target.value)\n    setbookComments(event.target.value)\n  }\n\n  const openEdit = (book) => {\n    console.log(\"Edit\", book.id, book.title)\n    setModalIsOpen(true)\n\n    setbookTitle(book.title)\n    setbookAuthor(book.author)\n    setbookComments(book.comments)\n    setBookId(book.id)\n  }\n\n  const closeModal = () => setModalIsOpen(false)\n\n  // Edit a book\n  const handleEdit = (event) => {\n    event.preventDefault()\n    console.log(\"Submitting edit\")\n\n    const idToUpdate = bookId\n    const bookObject = {\n      title: bookTitle,\n      author: bookAuthor,\n      comments: bookComments\n    }\n    \n    console.log(bookObject);\n    console.log(idToUpdate);\n\n    axios.post('http://localhost:4000/books/update/'+idToUpdate, bookObject)\n      .then(res => {\n        console.log(\"axios, muokataan\", res.data)\n    })\n    console.log(\"muokattu\")\n    setModalIsOpen(false)\n    setbookTitle('')\n    setbookAuthor('')\n    setbookComments('')\n    window.alert(\"Muokkaukset on tallennettu.\")\n  }\n\n  // Deleting a book\n  const handleDelete = (book) => {\n    console.log(\"Delete clicked\");\n    console.log(book.id);\n\n    window.confirm(`Poistetaanko ${book.title}?`) ?\n      axios.delete('http://localhost:4000/books/'+book.id)\n        .then(res => {\n          console.log(res.data, book.title);\n        \n        const updatedBookList = books.filter(b => b.id !== book.id);\n        \n        setBooks(updatedBookList);\n        console.log(\"Updated book list: \", updatedBookList);\n      })\n      : console.log(\"Not removing\");\n  }\n\n  return (\n    <div>\n      <AddNewBookForm \n        bookTitle={bookTitle}\n        bookAuthor={bookAuthor}\n        onSubmit={addBook}\n        handlebookTitle={handlebookTitle}\n        handlebookAuthor={handlebookAuthor}\n        bookComments={bookComments}\n        handlebookComments={handlebookComments}\n         />\n      <br></br>\n      <div>\n      <EditBookForm \n        modalIsOpen={modalIsOpen}\n        bookTitle={bookTitle}\n        bookAuthor={bookAuthor}\n        onSubmit={handleEdit}\n        handlebookTitle={handlebookTitle}\n        handlebookAuthor={handlebookAuthor}\n        bookComments={bookComments}\n        handlebookComments={handlebookComments}\n        closeModal={closeModal}\n      />\n        <BookList \n          books={books} \n          handleDelete={handleDelete} \n          handleEdit={handleEdit} \n          openEdit={openEdit} \n          modalIsOpen={modalIsOpen} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}